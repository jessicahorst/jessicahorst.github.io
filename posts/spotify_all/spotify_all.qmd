---
title: "spotify_all"
author: "Jessica Horst"
date: "`r Sys.Date()`"
categories: [spotify, data analysis]
image: spotify.png
from: markdown+emoji

execute: 
  warning: false
  message: false
  
toc: true
---

```{r}
#| include: false

library(knitr)
library(rmarkdown)
library(tidyverse)
library(skimr)
library(ggthemes)
library(hrbrthemes)

theme_set(theme_ipsum()+
          theme(strip.background =element_rect(fill="lightgray"),
                axis.title.x  = element_text(angle = 0,
                                            size = rel(1.5),
                                            margin = margin(10,0,0,0)),
                axis.title.y  = element_text(angle = 0,
                                            size = rel(1.5),
                                            margin = margin(0,10,0,0))
                )
          )
```

Let's analyze the `spotify_all` data:

:notes:

```{r}
spotify_all <- read_csv('https://bcdanl.github.io/data/spotify_all.csv')
```

## Q1a

Find the ten most popular song.
A value of a song is defined as a combination of a artist_name value and a track_name value.
Who are artists for those ten most popular song?

```{r}
Q1a <- spotify_all %>% 
  count(artist_name, track_name) %>% 
  arrange(-n) %>% 
  head(10)

Q1a
```

## Q1b

Find the five most popular artist in terms of the number of occurrences in the data.frame, spotify_all.
What is the most popular song for each of the five most popular artist?

```{r}
Q1b <- spotify_all %>% 
  group_by(artist_name) %>% 
  mutate(n_popular_artist = n()) %>% 
  ungroup() %>% 
  mutate( artist_ranking = dense_rank( desc(n_popular_artist) ) ) %>% 
  filter( artist_ranking <= 5) %>% 
  group_by(artist_name, track_name) %>% 
  mutate(n_popular_track = n()) %>% 
  group_by(artist_name) %>% 
  mutate(track_ranking = dense_rank( desc(n_popular_track) ) ) %>% 
  filter( track_ranking <= 2) %>%   # I just wanted to see the top two tracks for each artist
  select(artist_name, artist_ranking, n_popular_artist, track_name, track_ranking, n_popular_track) %>% 
  distinct() %>% 
  arrange(artist_ranking, track_ranking)

Q1b
```

## Q1c

Provide both (1) ggplot codes and (2) a couple of sentences to describe the relationship between pos and the ten most popular artists.

```{r}
Q1c <- spotify_all %>% 
  group_by(artist_name) %>% 
  mutate(n_popular_artist = n()) %>% 
  ungroup() %>% 
  mutate( artist_ranking = dense_rank( desc(n_popular_artist) ) ) %>% 
  filter( artist_ranking <= 10) 
  
# boxplot
ggplot(Q1c,
       aes(x = pos, y = fct_reorder(artist_name, -artist_ranking)) ) +
  geom_boxplot() +
  stat_summary(
    fun = mean,
    color = 'red'
  )
```

## Q1d

Create the data.frame with pid-artist level of observations with the following four variables:

pid: playlist id
playlist_name: name of playlist
artist: name of the trackâ€™s primary artist, which appears only once within a playlist
n_artist: number of occurrences of artist within a playlist

```{r}
Q1d <- spotify_all %>% 
  count(pid, playlist_name, artist_name) %>% 
  rename(n_artist = n) %>% 
  arrange(pid, -n_artist, artist_name)
```

