{
  "hash": "54448b77ff6cc90d70c8b59365bf8e90",
  "result": {
    "markdown": "---\ntitle: \"spotify_all\"\nauthor: \"Jessica Horst\"\ndate: \"2023-12-12\"\ncategories: [spotify, data analysis]\nimage: spotify.png\nfrom: markdown+emoji\n\nexecute: \n  warning: false\n  message: false\n  \ntoc: true\n---\n\n\n\n\nLet's analyze the `spotify_all` data:\n\n:notes:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nspotify_all <- read_csv('https://bcdanl.github.io/data/spotify_all.csv')\n```\n:::\n\n\n## Q1a\n\nFind the ten most popular song.\nA value of a song is defined as a combination of a artist_name value and a track_name value.\nWho are artists for those ten most popular song?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nQ1a <- spotify_all %>% \n  count(artist_name, track_name) %>% \n  arrange(-n) %>% \n  head(10)\n\nQ1a\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 3\n   artist_name      track_name                              n\n   <chr>            <chr>                               <int>\n 1 Drake            One Dance                             143\n 2 Kendrick Lamar   HUMBLE.                               142\n 3 The Chainsmokers Closer                                129\n 4 DRAM             Broccoli (feat. Lil Yachty)           127\n 5 Post Malone      Congratulations                       119\n 6 Migos            Bad and Boujee (feat. Lil Uzi Vert)   117\n 7 KYLE             iSpy (feat. Lil Yachty)               115\n 8 Lil Uzi Vert     XO TOUR Llif3                         113\n 9 Aminé            Caroline                              107\n10 Khalid           Location                              102\n```\n:::\n:::\n\n\n## Q1b\n\nFind the five most popular artist in terms of the number of occurrences in the data.frame, spotify_all.\nWhat is the most popular song for each of the five most popular artist?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nQ1b <- spotify_all %>% \n  group_by(artist_name) %>% \n  mutate(n_popular_artist = n()) %>% \n  ungroup() %>% \n  mutate( artist_ranking = dense_rank( desc(n_popular_artist) ) ) %>% \n  filter( artist_ranking <= 5) %>% \n  group_by(artist_name, track_name) %>% \n  mutate(n_popular_track = n()) %>% \n  group_by(artist_name) %>% \n  mutate(track_ranking = dense_rank( desc(n_popular_track) ) ) %>% \n  filter( track_ranking <= 2) %>%   # I just wanted to see the top two tracks for each artist\n  select(artist_name, artist_ranking, n_popular_artist, track_name, track_ranking, n_popular_track) %>% \n  distinct() %>% \n  arrange(artist_ranking, track_ranking)\n\nQ1b\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 6\n# Groups:   artist_name [5]\n   artist_name    artist_ranking n_popular_artist track_name  track_ranking\n   <chr>                   <int>            <int> <chr>               <int>\n 1 Drake                       1             2715 One Dance               1\n 2 Drake                       1             2715 Jumpman                 2\n 3 Kanye West                  2             1065 Gold Digger             1\n 4 Kanye West                  2             1065 Stronger                2\n 5 Kendrick Lamar              3             1035 HUMBLE.                 1\n 6 Kendrick Lamar              3             1035 DNA.                    2\n 7 Rihanna                     4              915 Needed Me               1\n 8 Rihanna                     4              915 Work                    2\n 9 The Weeknd                  5              913 Starboy                 1\n10 The Weeknd                  5              913 The Hills               2\n# ℹ 1 more variable: n_popular_track <int>\n```\n:::\n:::\n\n\n## Q1c\n\nProvide both (1) ggplot codes and (2) a couple of sentences to describe the relationship between pos and the ten most popular artists.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nQ1c <- spotify_all %>% \n  group_by(artist_name) %>% \n  mutate(n_popular_artist = n()) %>% \n  ungroup() %>% \n  mutate( artist_ranking = dense_rank( desc(n_popular_artist) ) ) %>% \n  filter( artist_ranking <= 10) \n  \n# boxplot\nggplot(Q1c,\n       aes(x = pos, y = fct_reorder(artist_name, -artist_ranking)) ) +\n  geom_boxplot() +\n  stat_summary(\n    fun = mean,\n    color = 'red'\n  )\n```\n\n::: {.cell-output-display}\n![](spotify_all_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n## Q1d\n\nCreate the data.frame with pid-artist level of observations with the following four variables:\n\npid: playlist id\nplaylist_name: name of playlist\nartist: name of the track’s primary artist, which appears only once within a playlist\nn_artist: number of occurrences of artist within a playlist\n\n\n::: {.cell}\n\n```{.r .cell-code}\nQ1d <- spotify_all %>% \n  count(pid, playlist_name, artist_name) %>% \n  rename(n_artist = n) %>% \n  arrange(pid, -n_artist, artist_name)\n```\n:::\n",
    "supporting": [
      "spotify_all_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}